{"version":3,"file":"userStorage.js","sources":["utils/userStorage.js"],"sourcesContent":["/**\r\n * 用户信息存储管理工具\r\n * 提供用户信息的本地存储和读取功能\r\n */\r\n\r\n// 用户信息存储的键名\r\nconst USER_INFO_KEY = 'MILK_STORE_USER_INFO';\r\n\r\n/**\r\n * 保存用户信息到本地\r\n * @param {Object} userInfo - 用户信息对象\r\n * @returns {Boolean} - 保存是否成功\r\n */\r\nexport const saveUserInfo = (userInfo) => {\r\n  try {\r\n    // 保存前可以进行数据校验\r\n    if (!userInfo || typeof userInfo !== 'object') {\r\n      console.error('保存的用户信息格式不正确');\r\n      return false;\r\n    }\r\n    \r\n    // 将对象转换为JSON字符串并保存\r\n    uni.setStorageSync(USER_INFO_KEY, JSON.stringify(userInfo));\r\n    console.log('已保存用户信息到本地存储');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存用户信息失败', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取本地存储的用户信息\r\n * @returns {Object|null} - 用户信息对象，如果不存在则返回null\r\n */\r\nexport const getUserInfo = () => {\r\n  try {\r\n    const userInfoStr = uni.getStorageSync(USER_INFO_KEY);\r\n    if (!userInfoStr) return null;\r\n    \r\n    // 解析存储的用户信息\r\n    const userInfo = JSON.parse(userInfoStr);\r\n    console.log('已从本地存储获取用户信息');\r\n    return userInfo;\r\n  } catch (error) {\r\n    console.error('获取用户信息失败', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新用户信息（部分更新）\r\n * @param {Object} partialInfo - 需要更新的部分用户信息\r\n * @returns {Boolean} - 更新是否成功\r\n */\r\nexport const updateUserInfo = (partialInfo) => {\r\n  try {\r\n    if (!partialInfo || typeof partialInfo !== 'object') {\r\n      console.error('更新的用户信息格式不正确');\r\n      return false;\r\n    }\r\n    \r\n    // 如果提供的是完整的用户信息对象，直接保存\r\n    if (partialInfo.userId && partialInfo.coupons) {\r\n      return saveUserInfo(partialInfo);\r\n    }\r\n    \r\n    // 否则获取当前存储的用户信息并合并\r\n    const currentInfo = getUserInfo() || {};\r\n    \r\n    // 特殊处理优惠券数组，确保已使用状态被保留\r\n    if (partialInfo.coupons && Array.isArray(partialInfo.coupons)) {\r\n      // 如果currentInfo中有优惠券信息\r\n      if (currentInfo.coupons && Array.isArray(currentInfo.coupons)) {\r\n        // 创建一个优惠券ID到优惠券对象的映射，以便快速查找\r\n        const couponMap = {};\r\n        currentInfo.coupons.forEach(coupon => {\r\n          couponMap[coupon.id] = coupon;\r\n        });\r\n        \r\n        // 更新现有优惠券的状态\r\n        partialInfo.coupons.forEach(coupon => {\r\n          // 如果本地存储中存在相同ID的优惠券且状态为\"已使用\"，则保留该状态\r\n          if (couponMap[coupon.id] && couponMap[coupon.id].status === 'used') {\r\n            coupon.status = 'used';\r\n            coupon.usedTime = couponMap[coupon.id].usedTime;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 合并信息并保存\r\n    const newInfo = { ...currentInfo, ...partialInfo };\r\n    return saveUserInfo(newInfo);\r\n  } catch (error) {\r\n    console.error('更新用户信息失败', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 清除本地存储的用户信息\r\n * @returns {Boolean} - 清除是否成功\r\n * \r\n */\r\nexport const clearUserInfo = () => {\r\n  try {\r\n    uni.removeStorageSync(USER_INFO_KEY);\r\n    console.log('已清除本地存储的用户信息');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('清除用户信息失败', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 检查用户是否已登录\r\n * @returns {Boolean} - 是否已登录\r\n */\r\nexport const isUserLoggedIn = () => {\r\n  const userInfo = getUserInfo();\r\n  // 根据实际业务逻辑判断用户是否已登录\r\n  // 例如检查是否有token或userId等关键字段\r\n  return userInfo !== null && userInfo.hasOwnProperty('userId');\r\n}; "],"names":["uni"],"mappings":";;AAMA,MAAM,gBAAgB;AAOV,MAAC,eAAe,CAAC,aAAa;AACxC,MAAI;AAEF,QAAI,CAAC,YAAY,OAAO,aAAa,UAAU;AAC7CA,oBAAAA,MAAc,MAAA,SAAA,8BAAA,cAAc;AAC5B,aAAO;AAAA,IACR;AAGDA,kBAAG,MAAC,eAAe,eAAe,KAAK,UAAU,QAAQ,CAAC;AAC1DA,kBAAAA,MAAA,MAAA,OAAA,8BAAY,cAAc;AAC1B,WAAO;AAAA,EACR,SAAQ,OAAO;AACdA,kBAAA,MAAA,MAAA,SAAA,8BAAc,YAAY,KAAK;AAC/B,WAAO;AAAA,EACR;AACH;AAMY,MAAC,cAAc,MAAM;AAC/B,MAAI;AACF,UAAM,cAAcA,cAAAA,MAAI,eAAe,aAAa;AACpD,QAAI,CAAC;AAAa,aAAO;AAGzB,UAAM,WAAW,KAAK,MAAM,WAAW;AACvCA,kBAAAA,MAAA,MAAA,OAAA,8BAAY,cAAc;AAC1B,WAAO;AAAA,EACR,SAAQ,OAAO;AACdA,kBAAA,MAAA,MAAA,SAAA,8BAAc,YAAY,KAAK;AAC/B,WAAO;AAAA,EACR;AACH;AAOY,MAAC,iBAAiB,CAAC,gBAAgB;AAC7C,MAAI;AACF,QAAI,CAAC,eAAe,OAAO,gBAAgB,UAAU;AACnDA,oBAAAA,MAAc,MAAA,SAAA,8BAAA,cAAc;AAC5B,aAAO;AAAA,IACR;AAGD,QAAI,YAAY,UAAU,YAAY,SAAS;AAC7C,aAAO,aAAa,WAAW;AAAA,IAChC;AAGD,UAAM,cAAc,YAAa,KAAI;AAGrC,QAAI,YAAY,WAAW,MAAM,QAAQ,YAAY,OAAO,GAAG;AAE7D,UAAI,YAAY,WAAW,MAAM,QAAQ,YAAY,OAAO,GAAG;AAE7D,cAAM,YAAY,CAAA;AAClB,oBAAY,QAAQ,QAAQ,YAAU;AACpC,oBAAU,OAAO,EAAE,IAAI;AAAA,QACjC,CAAS;AAGD,oBAAY,QAAQ,QAAQ,YAAU;AAEpC,cAAI,UAAU,OAAO,EAAE,KAAK,UAAU,OAAO,EAAE,EAAE,WAAW,QAAQ;AAClE,mBAAO,SAAS;AAChB,mBAAO,WAAW,UAAU,OAAO,EAAE,EAAE;AAAA,UACxC;AAAA,QACX,CAAS;AAAA,MACF;AAAA,IACF;AAGD,UAAM,UAAU,EAAE,GAAG,aAAa,GAAG,YAAW;AAChD,WAAO,aAAa,OAAO;AAAA,EAC5B,SAAQ,OAAO;AACdA,kBAAA,MAAA,MAAA,SAAA,8BAAc,YAAY,KAAK;AAC/B,WAAO;AAAA,EACR;AACH;;;;"}