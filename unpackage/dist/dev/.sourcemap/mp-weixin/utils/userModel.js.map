{"version":3,"file":"userModel.js","sources":["utils/userModel.js"],"sourcesContent":["/**\n * 用户信息模型\n * 定义用户信息的数据结构和默认值\n */\n\n/**\n * 创建默认用户信息\n * @returns {Object} 默认用户信息对象\n */\nexport const createDefaultUserInfo = () => {\n  // 当前时间戳\n  const now = Date.now();\n  \n  return {\n    userId: 'guest_' + Date.now(), // 用户唯一标识\n    nickname: '熊猫奶茶会员', // 用户昵称\n    avatar: '/static/images/avatar.png', // 头像地址\n    phone: '', // 手机号\n    gender: '', // 性别：male-男，female-女\n    birthday: '', // 生日，格式：YYYY-MM-DD\n    addresses: [], // 收货地址列表\n    pandaCoins: 0, // 熊猫币\n    lightningStars: 0, // 点亮星，用于点亮勋章\n    coupons: [], // 优惠券列表\n    medals: [], // 勋章列表\n    memberLevel: 1, // 会员等级\n    createTime: now, // 创建时间\n    lastLoginTime: now, // 最后登录时间\n  };\n};\n\n/**\n * 验证用户信息字段是否合法\n * @param {Object} userInfo - 用户信息对象\n * @returns {Boolean} 是否合法\n */\nexport const validateUserInfo = (userInfo) => {\n  if (!userInfo || typeof userInfo !== 'object') {\n    return false;\n  }\n  \n  // 基本字段类型验证\n  if (userInfo.userId && typeof userInfo.userId !== 'string') return false;\n  if (userInfo.nickname && typeof userInfo.nickname !== 'string') return false;\n  if (userInfo.phone && typeof userInfo.phone !== 'string') return false;\n  if (userInfo.pandaCoins !== undefined && typeof userInfo.pandaCoins !== 'number') return false;\n  if (userInfo.gender && !['male', 'female'].includes(userInfo.gender)) return false;\n  if (userInfo.birthday && typeof userInfo.birthday !== 'string') return false;\n  \n  // 数组类型验证\n  if (userInfo.coupons && !Array.isArray(userInfo.coupons)) return false;\n  if (userInfo.medals && !Array.isArray(userInfo.medals)) return false;\n  if (userInfo.addresses && !Array.isArray(userInfo.addresses)) return false;\n  \n  return true;\n};\n\n/**\n * 合并用户信息，使用默认值填充缺失字段\n * @param {Object} userInfo - 用户提供的信息\n * @returns {Object} 合并后的完整用户信息\n */\nexport const mergeWithDefaultUserInfo = (userInfo = {}) => {\n  const defaultInfo = createDefaultUserInfo();\n  return { ...defaultInfo, ...userInfo };\n};\n\n/**\n * 根据类型获取用户勋章\n * @param {Array} medals - 用户拥有的勋章数组\n * @param {String} type - 勋章类型：seasonal(季节), nature(大自然), level(等级)\n * @returns {Array} 指定类型的勋章数组\n */\nexport const getUserMedalsByType = (medals = [], type) => {\n  if (!Array.isArray(medals)) return [];\n  return medals.filter(medal => medal.type === type && medal.isActive);\n}; "],"names":[],"mappings":";AASY,MAAC,wBAAwB,MAAM;AAEzC,QAAM,MAAM,KAAK;AAEjB,SAAO;AAAA,IACL,QAAQ,WAAW,KAAK,IAAK;AAAA;AAAA,IAC7B,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA,IACR,UAAU;AAAA;AAAA,IACV,WAAW,CAAE;AAAA;AAAA,IACb,YAAY;AAAA;AAAA,IACZ,gBAAgB;AAAA;AAAA,IAChB,SAAS,CAAE;AAAA;AAAA,IACX,QAAQ,CAAE;AAAA;AAAA,IACV,aAAa;AAAA;AAAA,IACb,YAAY;AAAA;AAAA,IACZ,eAAe;AAAA;AAAA,EACnB;AACA;AAiCY,MAAC,2BAA2B,CAAC,WAAW,OAAO;AACzD,QAAM,cAAc;AACpB,SAAO,EAAE,GAAG,aAAa,GAAG;AAC9B;;;"}