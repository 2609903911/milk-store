{"version":3,"file":"orderApi.js","sources":["utils/api/orderApi.js"],"sourcesContent":["// 订单API服务\r\n\r\nimport { get, post, put } from './request';\r\nimport { API_PATHS } from './config';\r\n\r\n/**\r\n * 获取用户所有订单\r\n * @param {String} userId 用户ID\r\n * @returns {Promise} 订单数据列表\r\n */\r\nexport const fetchUserOrders = async (userId) => {\r\n  try {\r\n    // 目前使用本地存储，实际项目中应该请求服务器API\r\n    const savedOrders = uni.getStorageSync('savedOrders') || [];\r\n    return savedOrders;\r\n  } catch (error) {\r\n    console.error('获取用户订单失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建订单\r\n * @param {Object} orderData 订单数据\r\n * @returns {Promise} 创建的订单数据\r\n */\r\nexport const createOrder = async (orderData) => {\r\n  try {\r\n    // 创建订单ID\r\n    const orderId = 'ORDER' + Date.now().toString();\r\n    const newOrder = {\r\n      id: orderId,\r\n      ...orderData,\r\n      status: 'pending',\r\n      time: Date.now()\r\n    };\r\n    \r\n    // 获取现有订单并添加新订单\r\n    const savedOrders = uni.getStorageSync('savedOrders') || [];\r\n    savedOrders.unshift(newOrder);\r\n    \r\n    // 保存到本地存储\r\n    uni.setStorageSync('savedOrders', savedOrders);\r\n    \r\n    return newOrder;\r\n  } catch (error) {\r\n    console.error('创建订单失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新订单状态\r\n * @param {String} orderId 订单ID\r\n * @param {String} status 订单新状态\r\n * @returns {Promise} 更新后的订单数据\r\n */\r\nexport const updateOrderStatus = async (orderId, status) => {\r\n  try {\r\n    // 获取现有订单\r\n    const savedOrders = uni.getStorageSync('savedOrders') || [];\r\n    const orderIndex = savedOrders.findIndex(order => order.id === orderId);\r\n    \r\n    if (orderIndex === -1) {\r\n      throw new Error(`未找到ID为${orderId}的订单`);\r\n    }\r\n    \r\n    // 更新订单状态\r\n    savedOrders[orderIndex].status = status;\r\n    \r\n    // 保存更新后的订单\r\n    uni.setStorageSync('savedOrders', savedOrders);\r\n    \r\n    return savedOrders[orderIndex];\r\n  } catch (error) {\r\n    console.error(`更新订单${orderId}状态失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取订单详情\r\n * @param {String} orderId 订单ID\r\n * @returns {Promise} 订单详情数据\r\n */\r\nexport const fetchOrderById = async (orderId) => {\r\n  try {\r\n    // 获取所有订单\r\n    const savedOrders = uni.getStorageSync('savedOrders') || [];\r\n    const order = savedOrders.find(item => item.id === orderId);\r\n    \r\n    if (!order) {\r\n      throw new Error(`未找到ID为${orderId}的订单`);\r\n    }\r\n    \r\n    return order;\r\n  } catch (error) {\r\n    console.error(`获取订单${orderId}详情失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 取消订单\r\n * @param {String} orderId 订单ID\r\n * @returns {Promise} 更新后的订单数据\r\n */\r\nexport const cancelOrder = async (orderId) => {\r\n  return await updateOrderStatus(orderId, 'cancelled');\r\n};\r\n\r\n/**\r\n * 完成订单\r\n * @param {String} orderId 订单ID\r\n * @returns {Promise} 更新后的订单数据\r\n */\r\nexport const completeOrder = async (orderId) => {\r\n  return await updateOrderStatus(orderId, 'completed');\r\n}; "],"names":["uni"],"mappings":";;AAUY,MAAC,kBAAkB,OAAO,WAAW;AAC/C,MAAI;AAEF,UAAM,cAAcA,cAAG,MAAC,eAAe,aAAa,KAAK,CAAA;AACzD,WAAO;AAAA,EACR,SAAQ,OAAO;AACdA,kBAAc,MAAA,MAAA,SAAA,+BAAA,aAAa,KAAK;AAChC,UAAM;AAAA,EACP;AACH;AAOY,MAAC,cAAc,OAAO,cAAc;AAC9C,MAAI;AAEF,UAAM,UAAU,UAAU,KAAK,IAAK,EAAC,SAAQ;AAC7C,UAAM,WAAW;AAAA,MACf,IAAI;AAAA,MACJ,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,MAAM,KAAK,IAAK;AAAA,IACtB;AAGI,UAAM,cAAcA,cAAG,MAAC,eAAe,aAAa,KAAK,CAAA;AACzD,gBAAY,QAAQ,QAAQ;AAG5BA,kBAAAA,MAAI,eAAe,eAAe,WAAW;AAE7C,WAAO;AAAA,EACR,SAAQ,OAAO;AACdA,kBAAA,MAAA,MAAA,SAAA,+BAAc,WAAW,KAAK;AAC9B,UAAM;AAAA,EACP;AACH;AAQO,MAAM,oBAAoB,OAAO,SAAS,WAAW;AAC1D,MAAI;AAEF,UAAM,cAAcA,cAAG,MAAC,eAAe,aAAa,KAAK,CAAA;AACzD,UAAM,aAAa,YAAY,UAAU,WAAS,MAAM,OAAO,OAAO;AAEtE,QAAI,eAAe,IAAI;AACrB,YAAM,IAAI,MAAM,SAAS,OAAO,KAAK;AAAA,IACtC;AAGD,gBAAY,UAAU,EAAE,SAAS;AAGjCA,kBAAAA,MAAI,eAAe,eAAe,WAAW;AAE7C,WAAO,YAAY,UAAU;AAAA,EAC9B,SAAQ,OAAO;AACdA,wBAAA,MAAA,SAAA,+BAAc,OAAO,OAAO,SAAS,KAAK;AAC1C,UAAM;AAAA,EACP;AACH;AAOY,MAAC,iBAAiB,OAAO,YAAY;AAC/C,MAAI;AAEF,UAAM,cAAcA,cAAG,MAAC,eAAe,aAAa,KAAK,CAAA;AACzD,UAAM,QAAQ,YAAY,KAAK,UAAQ,KAAK,OAAO,OAAO;AAE1D,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,MAAM,SAAS,OAAO,KAAK;AAAA,IACtC;AAED,WAAO;AAAA,EACR,SAAQ,OAAO;AACdA,wBAAA,MAAA,SAAA,+BAAc,OAAO,OAAO,SAAS,KAAK;AAC1C,UAAM;AAAA,EACP;AACH;AAOY,MAAC,cAAc,OAAO,YAAY;AAC5C,SAAO,MAAM,kBAAkB,SAAS,WAAW;AACrD;;;;;"}