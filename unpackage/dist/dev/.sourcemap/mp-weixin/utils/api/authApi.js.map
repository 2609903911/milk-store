{"version":3,"file":"authApi.js","sources":["utils/api/authApi.js"],"sourcesContent":["// 认证相关API\r\n\r\nimport { post, get } from './request';\r\nimport { API_PATHS } from './config';\r\n\r\n/**\r\n * 发送验证码\r\n * @param {string} phone - 手机号码\r\n * @param {string} type - 验证码类型，默认为login\r\n * @returns {Promise<Object>} - 返回结果\r\n */\r\nexport function sendVerificationCode(phone, type = 'login') {\r\n  // 使用get方法，将参数放在URL中\r\n  return get(API_PATHS.AUTH_SEND_CODE, {\r\n    phone,\r\n    type\r\n  });\r\n}\r\n\r\n/**\r\n * 验证码登录\r\n * @param {string} phone - 手机号码\r\n * @param {string} code - 验证码\r\n * @returns {Promise<Object>} - 返回用户信息和token\r\n */\r\nexport function loginWithCode(phone, code) {\r\n  // 使用get方法，将参数放在URL中\r\n  return get(API_PATHS.AUTH_LOGIN_CODE, {\r\n    phone,\r\n    code\r\n  });\r\n}\r\n\r\n/**\r\n * 退出登录\r\n * @returns {Promise<Object>} - 返回结果\r\n */\r\nexport function logout() {\r\n  return post(API_PATHS.AUTH_LOGOUT, {});\r\n}\r\n\r\n/**\r\n * 检查登录状态\r\n * @returns {Promise<Object>} - 返回用户信息\r\n */\r\nexport function checkLoginStatus() {\r\n  return get(API_PATHS.AUTH_STATUS);\r\n}\r\n\r\n// 添加用户登录后的存储逻辑\r\nexport const saveUserToStorage = (userData, token) => {\r\n    try {\r\n        // 只存储用户ID\r\n        const userMinimalInfo = {\r\n            userId: userData.userId\r\n        };\r\n        \r\n        // 存储简化的用户数据\r\n        uni.setStorageSync('userInfo', userMinimalInfo);\r\n        // 存储token\r\n        uni.setStorageSync('token', token);\r\n        console.log('用户ID和token已保存到本地存储');\r\n        return true;\r\n    } catch (error) {\r\n        console.error('保存用户数据失败:', error);\r\n        return false;\r\n    }\r\n};\r\n\r\n// 从本地存储获取用户数据\r\nexport const getUserFromStorage = () => {\r\n    try {\r\n        const userInfo = uni.getStorageSync('userInfo');\r\n        const token = uni.getStorageSync('token');\r\n        \r\n        if (!userInfo || !userInfo.userId) {\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            ...userInfo,\r\n            token: token\r\n        };\r\n    } catch (error) {\r\n        console.error('获取用户数据失败:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// 清除用户数据\r\nexport const clearUserStorage = () => {\r\n    try {\r\n        uni.removeStorageSync('userInfo');\r\n        uni.removeStorageSync('token');\r\n        return true;\r\n    } catch (error) {\r\n        console.error('清除用户数据失败:', error);\r\n        return false;\r\n    }\r\n}; "],"names":["uni"],"mappings":";;AAkDY,MAAC,oBAAoB,CAAC,UAAU,UAAU;AAClD,MAAI;AAEA,UAAM,kBAAkB;AAAA,MACpB,QAAQ,SAAS;AAAA,IAC7B;AAGQA,kBAAAA,MAAI,eAAe,YAAY,eAAe;AAE9CA,kBAAAA,MAAI,eAAe,SAAS,KAAK;AACjCA,kBAAAA,MAAA,MAAA,OAAA,8BAAY,oBAAoB;AAChC,WAAO;AAAA,EACV,SAAQ,OAAO;AACZA,kBAAA,MAAA,MAAA,SAAA,8BAAc,aAAa,KAAK;AAChC,WAAO;AAAA,EACV;AACL;AAGY,MAAC,qBAAqB,MAAM;AACpC,MAAI;AACA,UAAM,WAAWA,cAAAA,MAAI,eAAe,UAAU;AAC9C,UAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AAExC,QAAI,CAAC,YAAY,CAAC,SAAS,QAAQ;AAC/B,aAAO;AAAA,IACV;AAED,WAAO;AAAA,MACH,GAAG;AAAA,MACH;AAAA,IACZ;AAAA,EACK,SAAQ,OAAO;AACZA,kBAAA,MAAA,MAAA,SAAA,8BAAc,aAAa,KAAK;AAChC,WAAO;AAAA,EACV;AACL;;;"}