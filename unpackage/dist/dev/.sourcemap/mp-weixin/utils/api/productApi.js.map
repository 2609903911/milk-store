{"version":3,"file":"productApi.js","sources":["utils/api/productApi.js"],"sourcesContent":["// 产品API服务\r\n\r\nimport { get } from \"./request\";\r\nimport { API_PATHS } from \"./config\";\r\n\r\n/**\r\n * 获取所有激活状态的产品\r\n * @returns {Promise} 产品数据\r\n */\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await get(API_PATHS.PRODUCTS);\r\n    return response || [];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有产品（包括非活跃产品，需要管理员权限）\r\n * @returns {Promise} 产品数据\r\n */\r\nexport const fetchAllProducts = async () => {\r\n  try {\r\n    const response = await get(API_PATHS.PRODUCTS_ALL);\r\n    return response || [];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取产品\r\n * @param {Number} id 产品ID\r\n * @returns {Promise} 产品数据\r\n */\r\nexport const fetchProductById = async (id) => {\r\n  try {\r\n    if (!id && id !== 0) {\r\n      throw new Error(\"产品ID不能为空\");\r\n    }\r\n\r\n    const response = await get(`${API_PATHS.PRODUCTS_BY_ID}/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据分类ID获取产品\r\n * @param {Number} categoryId 分类ID\r\n * @returns {Promise} 产品数据\r\n */\r\nexport const fetchProductsByCategory = async (categoryId) => {\r\n  try {\r\n    if (!categoryId && categoryId !== 0) {\r\n      throw new Error(\"分类ID不能为空\");\r\n    }\r\n\r\n    const response = await get(\r\n      `${API_PATHS.PRODUCTS_BY_CATEGORY}/${categoryId}`\r\n    );\r\n    return response || [];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据名称搜索产品\r\n * @param {String} name 产品名称关键词\r\n * @returns {Promise} 产品数据\r\n */\r\nexport const searchProductsByName = async (name) => {\r\n  try {\r\n    if (!name) {\r\n      throw new Error(\"搜索关键词不能为空\");\r\n    }\r\n\r\n    const response = await get(\r\n      `${API_PATHS.PRODUCTS_SEARCH}?name=${encodeURIComponent(name)}`\r\n    );\r\n    return response || [];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["get","API_PATHS"],"mappings":";;;AASY,MAAC,gBAAgB,YAAY;AACvC,MAAI;AACF,UAAM,WAAW,MAAMA,kBAAAA,IAAIC,iBAAS,UAAC,QAAQ;AAC7C,WAAO,YAAY,CAAA;AAAA,EACpB,SAAQ,OAAO;AACd,UAAM;AAAA,EACP;AACH;AAoBY,MAAC,mBAAmB,OAAO,OAAO;AAC5C,MAAI;AACF,QAAI,CAAC,MAAM,OAAO,GAAG;AACnB,YAAM,IAAI,MAAM,UAAU;AAAA,IAC3B;AAED,UAAM,WAAW,MAAMD,kBAAG,IAAC,GAAGC,iBAAAA,UAAU,cAAc,IAAI,EAAE,EAAE;AAC9D,WAAO;AAAA,EACR,SAAQ,OAAO;AACd,UAAM;AAAA,EACP;AACH;AAOY,MAAC,0BAA0B,OAAO,eAAe;AAC3D,MAAI;AACF,QAAI,CAAC,cAAc,eAAe,GAAG;AACnC,YAAM,IAAI,MAAM,UAAU;AAAA,IAC3B;AAED,UAAM,WAAW,MAAMD,kBAAG;AAAA,MACxB,GAAGC,iBAAAA,UAAU,oBAAoB,IAAI,UAAU;AAAA,IACrD;AACI,WAAO,YAAY,CAAA;AAAA,EACpB,SAAQ,OAAO;AACd,UAAM;AAAA,EACP;AACH;AAOY,MAAC,uBAAuB,OAAO,SAAS;AAClD,MAAI;AACF,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,WAAW;AAAA,IAC5B;AAED,UAAM,WAAW,MAAMD,kBAAG;AAAA,MACxB,GAAGC,iBAAS,UAAC,eAAe,SAAS,mBAAmB,IAAI,CAAC;AAAA,IACnE;AACI,WAAO,YAAY,CAAA;AAAA,EACpB,SAAQ,OAAO;AACd,UAAM;AAAA,EACP;AACH;;;;;"}